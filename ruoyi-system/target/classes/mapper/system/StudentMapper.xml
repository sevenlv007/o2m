<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.StudentMapper">
    
    <resultMap type="Student" id="StudentResult">
        <result property="id"    column="id"    />
        <result property="sname"    column="sname"    />
        <result property="sgender"    column="sgender"    />
        <result property="scity"    column="scity"    />
    </resultMap>

    <sql id="selectStudentVo">
        select id, sname, sgender, scity from student
    </sql>

    <select id="selectStudentList" parameterType="Student" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        <where>  
            <if test="sname != null  and sname != ''"> and sname like concat('%', #{sname}, '%')</if>
            <if test="sgender != null  and sgender != ''"> and sgender = #{sgender}</if>
            <if test="scity != null  and scity != ''"> and scity = #{scity}</if>
        </where>
    </select>
    
    <select id="selectStudentById" parameterType="Long" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertStudent" parameterType="Student" useGeneratedKeys="true" keyProperty="id">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sname != null">sname,</if>
            <if test="sgender != null">sgender,</if>
            <if test="scity != null">scity,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sname != null">#{sname},</if>
            <if test="sgender != null">#{sgender},</if>
            <if test="scity != null">#{scity},</if>
         </trim>
    </insert>

    <update id="updateStudent" parameterType="Student">
        update student
        <trim prefix="SET" suffixOverrides=",">
            <if test="sname != null">sname = #{sname},</if>
            <if test="sgender != null">sgender = #{sgender},</if>
            <if test="scity != null">scity = #{scity},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteStudentById" parameterType="Long">
        delete from student where id = #{id}
    </delete>

    <delete id="deleteStudentByIds" parameterType="String">
        delete from student where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>